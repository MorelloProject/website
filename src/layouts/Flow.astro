---
import { getCollection, getEntryBySlug } from "astro:content";

import "../styles/global.scss";
import type { AstroComponentFactory } from "astro/runtime/server/index.js";

import type { CollectionEntry } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
import MainHero from "@/components/hero/MainHero.astro";
import Sections from '@/components/body/DevSection.astro';



const allComponents = await import.meta.glob("../components/**/*.astro");
const rowComponents = {} as Record<string, { default: AstroComponentFactory }>;

for (const rowData of await getCollection("rows")) {
  rowComponents[rowData.slug] =
    await allComponents[
      `${rowData.data.path.replace("@/components", "../components")}`
    ]();
}

const sectionComponents = {} as Record<
  string,
  { default: AstroComponentFactory }
>;

for (const sectionData of await getCollection("sections")) {
  sectionComponents[sectionData.slug] =
    await allComponents[
      sectionData.data.path.replace("@/components", "../components")
    ]();
}

type Props = { frontmatter: CollectionEntry<"pages"> };

const {
  frontmatter: { slug },
  // data: { flow, jumbotron },
} = Astro.props!;

const page = await getEntryBySlug("pages", slug);
const { flow, hero, title,dark_title, description,dev_section } = page.data;

---

<BaseLayout title={title} dark_title={dark_title} description={description}>
  <main class="prose prose-xl w-full max-w-full md-content  ">
    <MainHero {...hero} />
    {dev_section &&<Sections dev_section={dev_section} />}
     
    {
      flow?.map((row: any) => {
        const { row: component, style, sections, ...rowProps } = row;
     
        const RowComp = rowComponents[component.slug].default;
       
        return RowComp ? (
          <RowComp {...rowProps}>

            {sections ? sections.map((section: any) => {

              const {component, ...sectionProps} = section
              const SectionComp = sectionComponents[component.slug].default

              return SectionComp ? <SectionComp {...sectionProps} ><slot /></SectionComp> : <div>Not implemented</div>
            }) : <></>}

          </RowComp>

        ) : <div>Not implemented</div>;
      })
    }
  </main>
 
  <script
    type="text/javascript"
    src="../node_modules/tw-elements/dist/js/tw-elements.umd.min.js"></script>
</BaseLayout>
<style is:global lang="scss">
  
</style>
