---
import { getCollection } from "astro:content";
import PostHeader from "../../components/resources/ResourceHeader.astro";
import CheriseedPortEffortlesslyToCheri from "@/components/resources/CheriseedPortEffortlesslyToCheri/index.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import Posts from "@/components/resources/CheriseedPortEffortlesslyToCheri/Posts.astro";

export async function getStaticPaths({}) {
  const resources = await getCollection("resources");
  const filteredResources = resources.filter(
    (resource) =>
      resource.slug == ("cheriseed-port-effortlessly-to-cheri" as string)
  );

  const paths = filteredResources.map((resource) => ({
    params: {
      cheri: resource.slug,
    },
    props: {
      resource,
    },
  }));
  return paths;
}

const { resource } = Astro.props;
---

<html lang="en">
  <BaseLayout
    title={resource.data.title}
    description={resource.data.description}
  >
    <main class="prose prose-xl w-full max-w-full bg-white">
      <div class="mx-auto py-4 md:max-w-[1200px] w-auto sm:p-2">
        <h1 class="text-[2em] font-medium">
          {resource.data.title}
        </h1>
      </div>

      <PostHeader data={resource} />
      <div class="prose-xl max-w-5xl first-line:text-left p-4 md:p-12 mx-auto">
        <CheriseedPortEffortlesslyToCheri />
      </div>
      <Posts />
    </main>
  </BaseLayout>
  <script
    type="text/javascript"
    src="../node_modules/tw-elements/dist/js/tw-elements.umd.min.js"></script>

  <script
    type="module"
    src="./node_modules/@github/clipboard-copy-element/dist/index.js"></script>
  <script>
    let copyButtonLabel = "Copy Code";
    let copyButtonImageSrc =
      "../../../public/assets/content/clipboard-copy.svg";
    let codeBlocks = Array.from(document.querySelectorAll("pre"));

    for (let codeBlock of codeBlocks) {
      let wrapper = document.createElement("div");
      wrapper.style.position = "relative";

      let copyButton = document.createElement("button");
      copyButton.className = "copy-code ";
      copyButton.setAttribute("type", "button");
      copyButton.setAttribute("data-te-toggle", "tooltip");
      copyButton.setAttribute("data-te-placement", "bottom");
      copyButton.setAttribute("data-te-ripple-init", "");
      copyButton.setAttribute("data-te-ripple-color", "light");
      copyButton.setAttribute("title", "Copy Code");

      let copyButtonImage = document.createElement("img");
      copyButtonImage.src = copyButtonImageSrc;
      copyButtonImage.alt = copyButtonLabel;
      copyButtonImage.className = "w-5 h-5";
      copyButton.appendChild(copyButtonImage);

      let tooltip = document.createElement("span");
      tooltip.className =
        "hidden bg-black text-white text-sm py-1 px-2 rounded absolute bottom-full left-full transform translate-x-0 translate-y-20 group-hover:block";
      tooltip.innerText = copyButtonLabel;
      copyButton.appendChild(tooltip);

      codeBlock.setAttribute("tabindex", "0");
      codeBlock.appendChild(copyButton);
      // wrap code block with relative parent element
      codeBlock.parentNode?.insertBefore(wrapper, codeBlock);
      wrapper.appendChild(codeBlock);

      copyButton.addEventListener("click", async () => {
        await copyCode(codeBlock, copyButton);
      });
    }

    async function copyCode(block: any, button: any) {
      let code = block.querySelector("code");
      let text = code.innerText;

      await navigator.clipboard.writeText(text);

      // visual feedback that task is completed
      button.innerText = "Code Copied";

      setTimeout(() => {
        button.innerHTML = `<img src="${copyButtonImageSrc}">`;
      }, 700);
    }
  </script>
  <script src="https://{{cdn}}/prismjs@v1.x/components/prism-core.min.js"
  ></script>
  <script
    src="https://{{cdn}}/prismjs@v1.x/plugins/autoloader/prism-autoloader.min.js"
  ></script>


</html>
